version: "3.8"

services:
  nginx:
    container_name: nginx_hackbook
    build:
      context: containers/nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
      # - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - hackbook
    depends_on:
      - api
      - frontend

  api:
    container_name: gin_hackbook
    build:
      context: .
      dockerfile: ./docker/go/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ./api/:/go/src
      - .env:/usr/local/go/src/hackbook/.env
    networks:
      - hackbook
    tty: true

  frontend:
    container_name: next_hackbook
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./frontend/:/app
      # exclude node_modules from being mounted
      - /app/node_modules
    command: sh -c "yarn install && yarn dev"
    networks:
      - hackbook

  db:
    container_name: postgresql_hackbook
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./api/db/init:/docker-entrypoint-initdb.d
    ports:
      - ${DB_PORT}:5432
    networks:
      - hackbook
    restart: always

volumes:
  db-store:

networks:
  hackbook:
    name: hackbook
